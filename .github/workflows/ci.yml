name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  release:
    types: [published]
  schedule:
  - cron:  '0 6 * * SAT'

jobs:
  format:
    runs-on: ubuntu-latest
    env:
      CXX: 'clang++-10'
    steps:
    - uses: actions/checkout@v1
    - name: install
      run: |
        sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-10 main"
        sudo apt-get update
        sudo apt-get install -y clang-10 clang-format-10
    - name: configure
      run: cmake -H. -Bbuild/ -DCLANG_FORMAT=/usr/bin/clang-format-10
    - name: lint
      run: cd build && ctest --output-on-failure -R ^test.format

  gcc:
    needs: [format]
    runs-on: ubuntu-latest
    env:
      CXX: 'g++'
      CXXFLAGS: '-fsanitize=address,undefined -fuse-ld=gold'
    steps:
    - uses: actions/checkout@v1
    - name: install
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y g++ cppcheck
    - name: configure
      run: cmake -H. -Bbuild/
    - name: test
      run: cd build && ctest --output-on-failure -E ^test.format

  clang:
    needs: [format]
    runs-on: ubuntu-latest
    env:
      CXX: 'clang++'
      CXXFLAGS: '-fsanitize=address,undefined'
    steps:
    - uses: actions/checkout@v1
    - name: install
      run: |
        sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc) main"
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y clang clang-tidy
    - name: configure
      run: cmake -H. -Bbuild/ -DCLANG_TIDY=/usr/bin/clang-tidy
    - name: test
      run: cd build && ctest --output-on-failure -E ^test.format

  xcode:
    needs: [format]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: cmake -H. -Bbuild/
    - name: test
      run: cd build && ctest --output-on-failure -E ^test.format

  standalone:
    needs: [gcc, clang, xcode]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: install
      run: sudo apt-get install -y tree
    - name: configure
      run: cmake -H. -Bbuild/ -DCMAKE_INSTALL_PREFIX=${PWD}/install/
    - name: deploy
      run: cmake --build build/ --target install && tree ${PWD}/install/
    - name: release
      if: github.event_name == 'release'
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: standalone
        FOLDER: install/include